name: Develop
on:
  push:
    branches:
      - develop

jobs:
  # ==========================================================================
  # Create Github tag/release and export short SHA of current HEAD
  prepareRelease:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.url }}
      github_sha_short: ${{ steps.slug.outputs.sha8 }}
      aliwa_release: ${{ steps.determine_release.outputs.aliwa_release }}
    steps:
      - uses: actions/checkout@v1
      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M:%S')"
      - name: Set Alias release/tag name
        id: determine_release
        run: |
          echo "::set-output name=aliwa_release::Build${{ github.run_number }}"

      # First create the plain release, so the upload URL could be exported
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.determine_release.outputs.aliwa_release }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Releasenotes from Develop
        id: create_release_develop
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.determine_release.outputs.aliwa_release }}
          name: "Continuous build #${{ github.run_number }}"
          body: |
            Build #${{ github.run_number }} from ${{ steps.date.outputs.date }}
            - To verify checksums see dedicated checksum files for each download
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ==========================================================================
  # Build all x86 Linux flavours except Ubuntu 20.04. See next step.
  buildLinux:
    runs-on: ubuntu-latest
    needs: prepareRelease
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: npm init
        run: npm init -y

      - name: Install dependencies
        run: yarn

      - name: Electron preparation
        run: |
          npm i --save-dev electron
          npm i -g @electron-forge/cli
          electron-forge import

      - name: Configure app icon
        run: |
          jq '(.config.forge.makers[] | select(.name == "@electron-forge/maker-deb") | .config.icon) |= "view_resources/img/aliwa_light.png" |
              (.config.forge.makers[] | select(.name == "@electron-forge/maker-deb") | .config.setupIcon) |= "view_resources/img/aliwa_light.png" |
              (.config.forge.makers[] | select(.name == "@electron-forge/maker-rpm") | .config.icon) |= "view_resources/img/aliwa_light.png" |
              (.config.forge.makers[] | select(.name == "@electron-forge/maker-rpm") | .config.setupIcon) |= "view_resources/img/aliwa_light.png"' package.json > package.json.tmp
          rm -f package.json
          mv package.json.tmp package.json

      - name: Build app
        run: npm run make

      - name: Check results
        id: find_deliveries
        run: |
          echo "::set-output name=aliwa_deb::$(find . -name '*.deb')"
          echo "::set-output name=aliwa_rpm::$(find . -name '*.rpm')"

      - name: Create sha256 checksum files
        run: |
          sha256sum ${{ github.workspace }}/${{ steps.find_deliveries.outputs.aliwa_deb }} | awk '{ print $1 }' > ${{ github.workspace }}/ALiWa.deb.sha256
          cat ${{ github.workspace }}/ALiWa.deb.sha256
          sha256sum ${{ github.workspace }}/${{ steps.find_deliveries.outputs.aliwa_rpm }} | awk '{ print $1 }' > ${{ github.workspace }}/ALiWa.rpm.sha256
          cat ${{ github.workspace }}/ALiWa.rpm.sha256

      - name: Upload DEB
        id: upload-deb-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/${{ steps.find_deliveries.outputs.aliwa_deb }}
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}.deb
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

      - name: Upload DEB Checksum file
        id: upload-deb-checksum-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ALiWa.deb.sha256
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}.deb.sha256
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

      - name: Upload RPM
        id: upload-rpm-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/${{ steps.find_deliveries.outputs.aliwa_rpm }}
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}.rpm
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

      - name: Upload RPM Checksum file
        id: upload-rpm-checksum-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ALiWa.rpm.sha256
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}.rpm.sha256
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

  # ==========================================================================
  # Build MacOS version
  buildMacOS:
    runs-on: macos-latest
    needs: prepareRelease
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: npm init
        run: npm init -y

      - name: Install dependencies
        run: yarn

      - name: Electron preparation
        run: |
          npm i --save-dev electron
          npm i -g @electron-forge/cli
          electron-forge import

      - name: Configure app icon
        run: |
          jq '(.config.forge.packagerConfig | .icon) |= "view_resources/img/icon.icns"' package.json > package.json.tmp
          rm -f package.json
          mv package.json.tmp package.json

      - name: Include Tor binaries
        run: |
          wget "https://github.com/aliascash/resources/blob/master/resources/Tor.libraries.MacOS.zip" -o Tor.libraries.MacOS.zip
          cd out/ALiWa-darwin-x64/ALiWa.app
          unzip ${{ github.workspace }}/Tor.libraries.MacOS.zip

      - name: Build app
        run: |
          npm install
          npm run make

      - name: Temp install of brew tree
        run: |
          brew install tree

      - name: Check results
        id: find_deliveries
        run: |
          pwd
          ls -la
          find . -name "*.dmg"
          tree out
          echo "::set-output name=aliwa_dmg::$(find . -name '*.dmg')"

      - name: Create delivery archive
        run: |
          cd out/ALiWa-darwin-x64
          zip -r -X ${{ github.workspace }}/ALiWa.zip ALiWa.app

      - name: Create MacOS sha256 checksum file
        run: |
          shasum -a 256 ${{ github.workspace }}/ALiWa.zip | awk '{ print $1 }' > ${{ github.workspace }}/ALiWa.sha256
          cat ${{ github.workspace }}/ALiWa.sha256

      - name: Upload DMG
        id: upload-dmg-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ALiWa.zip
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}-Mac.zip
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

      - name: Upload MacOS checksum file
        id: upload-release-checksum
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ALiWa.sha256
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}-Mac.zip.sha256
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

  # ==========================================================================
  # Build Windows x64 version
  buildWindows:
    runs-on: windows-latest
    needs: prepareRelease
    outputs:
      upload_url: ${{ needs.prepareRelease.outputs.upload_url }}
      github_sha_short: ${{ needs.prepareRelease.outputs.github_sha_short }}
      aliwa_release: ${{ needs.prepareRelease.outputs.aliwa_release }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: npm init
        run: npm init -y

      - name: Install dependencies
        run: yarn

      - name: Electron preparation
        run: |
          npm i --save-dev electron
          npm i -g @electron-forge/cli
          electron-forge import

      - name: Install app icon
        run: |
          powershell jq '(.config.forge.packagerConfig | .asar) |= true |
                         (.config.forge.packagerConfig | .icon) |= "view_resources/img/aliwa_light.ico" |
                         (.config.forge.packagerConfig | .setupIcon) |= "view_resources/img/aliwa_light.ico"' package.json > package.json.tmp
          powershell Remove-Item package.json
          powershell Rename-Item package.json.tmp package.json

      - name: Build application
        run: npm install
      - run: npm run make

      - name: Include Tor binaries
        run: |
          powershell Invoke-WebRequest -Uri "https://github.com/aliascash/resources/blob/master/resources/Tor.libraries.Win64.zip" -OutFile Tor.libraries.Win64.zip
          powershell Expand-Archive Tor.libraries.Win64.zip

      - name: Create zip archive and sha256 checksum
        run: |
          powershell Compress-Archive . ALiWa.zip
          powershell "(Get-FileHash ALiWa.zip).Hash > ALiWa.sha256"
          powershell "(Get-Content ALiWa.sha256) | Out-File ALiWa.sha256 -Encoding ascii"
          type ALiWa.sha256

      - name: Upload Windows Build
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/Alias.zip
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}-Win64.zip
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true

      - name: Upload Windows checksum file
        id: upload-release-checksum
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ALiWa.sha256
          asset_name: ALiWa-${{ needs.prepareRelease.outputs.aliwa_release }}-${{ needs.prepareRelease.outputs.github_sha_short }}-Win64.sha256
          tag: ${{ needs.prepareRelease.outputs.aliwa_release }}
          overwrite: true
